public enum OutputMessageType {
    UNIT_ALREADY_MOVED("This unit has already moved once"),
    WRONG_COMMAND("Wrong command"),
    A_UNIT_CANT_ATTACK_TARGET("A unit can't attackId target"),
    COMBO_ATTACK_SUCCESSFUL("Combo attackId successful"),
    A_UNIT_CANT_USE_COMBO("A unit can't use combo attackId"),
    BATTLE_NOT_FINISHED("Battle isn't finished yet..."),
    BATTLE_FINISHED("Battle is already finished"),
    INVALID_PASSWORD("Invalid password"),
    INVALID_USERNAME("This user does not exist"),
    USERNAME_ALREADY_EXISTS("This username already exists"),
    NOT_IN_SHOP("Card/item doesn't exist in shop"),
    UNIT_IS_STUNNED("This unit is stunned"),
    A_UNIT_DOESNT_EXIST("A unit doesn't exist"),
    INSUFFICIENT_MONEY("You don't have enough money"),
    BOUGHT_SUCCESSFULLY("Card/item was bought successfully"),
    NOT_IN_COLLECTION("You don't have the card or item"),
    SOLD_SUCCESSFULLY("Card or item was sold successfully"),
    DECK_ALREADY_EXISTS("A deck with the specified name already exists"),
    INVALID_DECK_PLAYER("Player's deck is invalid"),
    CANT_HAVE_MORE_ITEMS("You can't have more items"),
    DECK_CREATED("Deck has been successfully created"),
    LOGGED_IN_SUCCESSFULLY("You have successfully logged into your account"),
    ENTER_PASSWORD("Please enter your password"),
    DECK_DOESNT_EXIST("Deck doesn't exist"),
    DECK_DELETED("Deck deleted"),
    DECK_SELECTED("Deck was selected as main deck"),
    DECK_VALID("Deck is Valid"),
    DECK_NOT_VALID("Deck is NOT valid"),
    SELECTED("Card/unit selected"),
    INVALID_COLLECTABLE_CARD("Invalid card/collectable id"),
    CREATED_ACCOUNT_SUCCESSFULLY("account created"),
    INVALID_COLLECTABLE("Invalid collectable id"),
    INVALID_CARD("Invalid card id"),
    UNIT_NOT_SELECTED("No unit is selected"),
    UNIT_MOVED("Selected unit moved"),
    TARGET_NOT_IN_RANGE("Opponent unit is NOT in range"),
    CELL_IS_FULL("selected cell is full"),
    CELL_OUT_OF_RANGE("Cell unit is out of range"),
    NO_FLAG_NUMBER("please enter number of flags in flags mode!"),
    ATTACKED_SUCCESSFULLY("Attacked Successfully"),
    ALREADY_ATTACKED("Unit has already attacked"),
    NO_CARD_IN_BATTLEGROUND("There is no such card in battle ground"),
    CARD_ALREADY_IN_DECK("Card exists in Deck"),
    CARD_ADDED_SUCCESSFULLY("Card added successfully"),
    CARD_REMOVED_SUCCESSFULLY("Card removed successfully"),
    DECK_IS_FULL("Deck Is Full"),
    DECK_HAS_HERO("Deck Has Hero"),
    NO_SUCH_CARD_IN_DECK("no such card in deck"),
    WINNER_PLAYER1("first player has won the game"),
    WINNER_PLAYER2("second player has won the game"),
    INVALID_PLAYER("no one has won the game"),
    PLEASE_SELECT_A_DECK("please select a deck from below decks:"),
    INVALID_MODE("invalid mode"),
    ITEM_IS_EMTPY("there is no item in the selected deck"),
    HERO_IS_EMPTY("hero slot is empty in the deck"),
    FOUND_ITEM("found item with id: "),
    FOUND_CARD("found card with id: "),
    CARD_NOT_FOUND("Card wasn't found"),
    OUT_OF_BOUNDARIES("Out of boundaries"),
    NO_SUCH_CARD_IN_COLLECTION("there is no such card in the PlayerCollection"),
    NO_HERO("Hero can't use special power"),
    INVALID_NUMBER("the number was out of battleGround boundaries"),
    NO_SUCH_CARD_IN_HAND("no such card in hand"),
    THIS_CELL_IS_FULL("this cell is full"),
    PLEASE_ENTER_PASSWORD("please enter password:"),
    PASSWORD_CANT_BE_EMPTY("password can't be empty please enter a correct password"),
    CARD_INSERTED("Card Inserted"),
    BAD_PASSWORD("Please enter a correct password"),
    ACCOUNT_DOESNT_EXIST("The account doesn't exist"),
    SPECIAL_POWER_USED("Special power has been used"),
    TURN_CHANGED("Turn changed"),
    NOT_ENOUGH_MANA("Not enough mana"),
    NOT_NEARBY_FRIENDLY_UNITS("Selected cell is not nearby friendly units"),
    SPECIAL_POWER_IN_COOLDOWN("Special power is not ready yet..."),
    COLLECTABLE_NOT_SELECTED("No collectable is selected"),
    COLLECTABLE_USED("Collectable used"),
    HERO_HAS_NO_SPELL("Hero has no spell"),
    NO_ERROR("");

    private String message;

    OutputMessageType(String message) {
        this.message = message;
    }

    public String getMessage() {
        return message;
    }
}
